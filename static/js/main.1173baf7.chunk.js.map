{"version":3,"sources":["components/Forms/Form.js","components/UserList/UserItem.js","components/UserList/UsersList.js","components/Section/Section.js","components/Forms/Filter.js","App.js","components/hooks/useLocalStorage.js","index.js"],"names":["Form","addContact","useState","name","setName","number","setNumber","handlerChange","target","value","onSubmit","e","preventDefault","newContact","id","shortid","generate","className","type","onChange","autoComplete","pattern","title","required","htmlFor","UserItem","onClick","UserList","users","map","user","Section","children","Filter","filter","handleFilter","App","key","init","JSON","parse","localStorage","getItem","state","setState","useEffect","setItem","stringify","useLocalStorage","contacts","setContacts","setFilter","normalizedName","toLowerCase","contactForRender","contact","includes","newContactName","find","alert","filterValue","deleteItemId","withoutContact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1173baf7.chunk.js","sourcesContent":["import { useState } from 'react';\nimport shortid from 'shortid';\nimport PropTypes from 'prop-types';\nimport './Forms.scss';\n\nfunction Form({ addContact }) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handlerChange = ({ target }) => {\n    const { name, value } = target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  const handlerSubmit = e => {\n    e.preventDefault();\n    const newContact = {\n      id: shortid.generate(),\n      name,\n      number,\n    };\n    addContact(newContact);\n    reset();\n  };\n\n  return (\n    <form onSubmit={handlerSubmit} className=\"form\">\n      <div className=\"wrapper\">\n        <label className=\"label\">\n          Name\n          <input\n            id=\"name\"\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            className=\"input\"\n            onChange={handlerChange}\n            autoComplete=\"off\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n          />\n        </label>\n\n        <label htmlFor=\"number\" className=\"label\">\n          Number\n          <input\n            id=\"number\"\n            type=\"tel\"\n            name=\"number\"\n            value={number}\n            className=\"input\"\n            autoComplete=\"off\"\n            onChange={handlerChange}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n          />\n        </label>\n      </div>\n      <button type=\"submit\" className=\"btn\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n\nForm.propTypes = {\n  addContact: PropTypes.func.isRequired,\n};\n\nexport default Form;\n","import PropTypes from 'prop-types';\nimport './User.scss';\n\nfunction UserItem({ id, name, number, onClick }) {\n  return (\n    <li className=\"item\">\n      <span>\n        {name}: {number}\n      </span>\n      <button id={id} type=\"button\" onClick={onClick} className=\"btn\">\n        Delete\n      </button>\n    </li>\n  );\n}\n\nUserItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default UserItem;\n","import UserItem from './UserItem';\nimport PropTypes from 'prop-types';\nimport './User.scss';\n\nfunction UserList({ users, onClick }) {\n  return (\n    <ul className=\"list\">\n      {users.map(user => (\n        <UserItem\n          key={user.id}\n          name={user.name}\n          number={user.number}\n          onClick={onClick}\n          id={user.id}\n        />\n      ))}\n    </ul>\n  );\n}\nUserList.propTypes = {\n  users: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ),\n  onClick: PropTypes.func,\n};\n\nexport default UserList;\n","import PropTypes from 'prop-types';\nimport './Section.scss';\n\nfunction Section({ title, children }) {\n  return (\n    <section className=\"section\">\n      {title && <h2 className=\"title\">{title}</h2>}\n      {children}\n    </section>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node.isRequired,\n};\n\nexport default Section;\n","import './Forms.scss';\nimport PropTypes from 'prop-types';\n\nfunction Filter({ filter, handleFilter }) {\n  return (\n    <label htmlFor=\"filter\" className=\"label filterLabel\">\n      Find contacts by name\n      <input\n        id=\"filter\"\n        type=\"text\"\n        name=\"filter\"\n        autoComplete=\"off\"\n        value={filter}\n        onChange={handleFilter}\n        className=\"input filterInput\"\n      />\n    </label>\n  );\n}\n\nFilter.propTypes = {\n  filter: PropTypes.string,\n  handleFilter: PropTypes.func.isRequired,\n};\nexport default Filter;\n","import './App.css';\nimport { useState } from 'react';\nimport Form from './components/Forms/Form';\nimport UserList from './components/UserList/UsersList';\nimport Section from './components/Section/Section';\nimport Filter from './components/Forms/Filter';\nimport useLocalStorage from './components/hooks/useLocalStorage';\n\nfunction App() {\n  const [contacts, setContacts] = useLocalStorage('contacts', []);\n  const [filter, setFilter] = useState('');\n\n  const addContactToList = newContact => {\n    const newContactName = newContact.name.toLowerCase();\n    const doubleContact = contacts.find(\n      contact => contact.name.toLowerCase() === newContactName,\n    );\n    if (doubleContact) {\n      alert(`${newContact.name} is already in contact`);\n      return;\n    }\n    setContacts([...contacts, newContact]);\n  };\n\n  const handleFilterContacts = e => {\n    const filterValue = e.target.value;\n    setFilter(filterValue);\n  };\n\n  const handlerDeleteUser = ({ target }) => {\n    const deleteItemId = target.id;\n    const withoutContact = contacts.filter(\n      contact => contact.id !== deleteItemId,\n    );\n    setContacts([...withoutContact]);\n  };\n\n  const normalizedName = filter.toLowerCase();\n  const contactForRender = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(normalizedName),\n  );\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"title\">Phonebook</h1>\n      <Section>\n        <Form addContact={addContactToList} />\n      </Section>\n      <Section title=\"Contacts\">\n        <Filter filter={filter} handleFilter={handleFilterContacts} />\n        <UserList users={contactForRender} onClick={handlerDeleteUser} />\n      </Section>\n    </div>\n  );\n}\n\nexport default App;\n","import { useState, useEffect } from 'react';\n\nexport default function useLocalStorage(key, init) {\n  const [state, setState] = useState(\n    JSON.parse(localStorage.getItem(key)) ?? init,\n  );\n  useEffect(() => {\n    localStorage.setItem(key, JSON.stringify(state));\n  }, [key, state]);\n\n  return [state, setState];\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}